- name: Install required packages (CentOS)
  yum:
    name: epel-release
    state: present
  when: ansible_distribution == "CentOS"

- name: Add Elasticsearch YUM repository (CentOS)
  yum_repository:
    name: elasticsearch
    description: Elasticsearch repository
    baseurl: https://artifacts.elastic.co/packages/7.x/yum
    gpgcheck: yes
    gpgkey: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    enabled: yes
  when: ansible_distribution == "CentOS" and not (ansible_facts['yum_repos']|default([]) | select('match', 'elasticsearch') | list)

- name: Install Elasticsearch (CentOS)
  package:
    name: elasticsearch
    state: present
  when: ansible_distribution == "CentOS"

- name: updating the configuration file to allow outside access (CentOS)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: 'network.host:'
    line: 'network.host: 0.0.0.0'
  when: ansible_distribution == "CentOS"

- name: updating port in configuration file (CentOS)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: 'http.port:'
    line: 'http.port: 9200'
  when: ansible_distribution == "CentOS"

- name: updating the config file to allow outside access (CentOS)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: 'cluster.initial_master_nodes:'
    line: 'cluster.initial_master_nodes: ["{{ ansible_default_ipv4.address }}"]'
  when: ansible_distribution == "CentOS"

- name: Install Kibana (CentOS)
  yum:
    name: kibana
    state: present
  when: ansible_distribution == "CentOS"

- name: Install Logstash (CentOS)
  yum:
    name: logstash
    state: present
  when: ansible_distribution == "CentOS"

- name: Enable / Start Logstash (CentOS)
  systemd:
    name: logstash
    state: started
    enabled: true
  when: ansible_distribution == "CentOS"

- name: Enable / Start Elasticsearch (CentOS)
  service:
    name: elasticsearch
    state: started
    enabled: true
  when: ansible_distribution == "CentOS"

- name: Enable / Start Kibana (CentOS)
  service:
    name: kibana
    state: started
    enabled: true
  when: ansible_distribution == "CentOS"

# Tasks for Ubuntu
- name: Add Elasticsearch APT GPG Key (Ubuntu)
  apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Add Elasticsearch APT repository (Ubuntu)
  apt_repository:
    repo: 'deb https://artifacts.elastic.co/packages/7.x/apt stable main'
    state: present
    filename: 'elastic-7.x'
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Install Elasticsearch (Ubuntu)
  apt:
    name: elasticsearch
    state: present
  when: ansible_distribution == "Ubuntu"

- name: updating the configuration file to allow outside access (Ubuntu)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: 'network.host:'
    line: 'network.host: 0.0.0.0'
  when: ansible_distribution == "Ubuntu"

- name: updating port in configuration file (Ubuntu)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: 'http.port:'
    line: 'http.port: 9200'
  when: ansible_distribution == "Ubuntu"

- name: updating the config file to allow outside access (Ubuntu)
  lineinfile:
    dest: /etc/elasticsearch/elasticsearch.yml
    regexp: 'cluster.initial_master_nodes:'
    line: 'cluster.initial_master_nodes: ["{{ ansible_default_ipv4.address }}"]'
  when: ansible_distribution == "Ubuntu"

- name: Install Kibana (Ubuntu)
  apt:
    name: kibana
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Install Logstash (Ubuntu)
  apt:
    name: logstash
    state: present
  when: ansible_distribution == "Ubuntu"

- name: Enable / Start Elasticsearch (Ubuntu)
  service:
    name: elasticsearch
    state: started
    enabled: true
  when: ansible_distribution == "Ubuntu"

- name: Enable / Start Kibana (Ubuntu)
  service:
    name: kibana
    state: started
    enabled: true
  when: ansible_distribution == "Ubuntu"

- name: Enable / Start Logstash (Ubuntu)
  service:
    name: logstash
    state: started
    enabled: true
  when: ansible_distribution == "Ubuntu"
